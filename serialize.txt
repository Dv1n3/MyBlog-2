{"content":"Les braqueurs de La Casa de Papel seront de retour en 2019. Apr\u00e8s des semaines de rumeurs, Netflix - qui la diffuse \u00e0 l'internationale - a annonc\u00e9 lors d'une \u00e9v\u00e9nement europ\u00e9en \u00e0 Rome qu'une saison 3 \u00e9tait bien en production. Elle sera toujours \u00e9crite et r\u00e9alis\u00e9e par Alex Pina. Le Professeur (Alvaro Morte), Tokyo, Berlin et les autres devraient donc \u00eatre de retour dans ces nouveaux \u00e9pisodes, enti\u00e8rement produits par le g\u00e9ant am\u00e9ricain de la SVOD et non plus par la cha\u00eene espagnole Antena3.\r\n\r\nLa Casa de Papel a rencontr\u00e9 un \u00e9norme succ\u00e8s quelques semaines apr\u00e8s son arriv\u00e9e sur la plateforme de streaming. On y suit un groupe de braqueurs tentant de d\u00e9rober la Maison de la Monnaie espagnole, entre amour, coups bas et jeu du chat et de la souris avec la police.","0":"Les braqueurs de La Casa de Papel seront de retour en 2019. Apr\u00e8s des semaines de rumeurs, Netflix - qui la diffuse \u00e0 l'internationale - a annonc\u00e9 lors d'une \u00e9v\u00e9nement europ\u00e9en \u00e0 Rome qu'une saison 3 \u00e9tait bien en production. Elle sera toujours \u00e9crite et r\u00e9alis\u00e9e par Alex Pina. Le Professeur (Alvaro Morte), Tokyo, Berlin et les autres devraient donc \u00eatre de retour dans ces nouveaux \u00e9pisodes, enti\u00e8rement produits par le g\u00e9ant am\u00e9ricain de la SVOD et non plus par la cha\u00eene espagnole Antena3.\r\n\r\nLa Casa de Papel a rencontr\u00e9 un \u00e9norme succ\u00e8s quelques semaines apr\u00e8s son arriv\u00e9e sur la plateforme de streaming. On y suit un groupe de braqueurs tentant de d\u00e9rober la Maison de la Monnaie espagnole, entre amour, coups bas et jeu du chat et de la souris avec la police."}{"content":"2018 sera une ann\u00e9e historique pour les tournois de rugby des clubs europ\u00e9ens car les finales auront lieu pour la premi\u00e8re fois en Espagne. Le stade San Mam\u00e9s de Bilbao accueillera les matchs phares de l'European Rugby Challenge Cup le vendredi 11 mai (coup d'envoi \u00e0 21:00) et de l'European Rugby Champions Cup le samedi 12 mai (coup d'envoi 17:45).\r\n\r\nLa finale du Continental Shield aura \u00e9galement lieu dans la ville basque alors que le sport se d\u00e9veloppe dans des territoires nouveaux et \u00e9mergents \u00e0 travers l'Europe.\r\n\r\n\r\nL'enceinte r\u00e9cemment refaite est le stade de l'Athletic Club de football et elle accueillera des matchs de l'EURO 2020 de l'UEFA. La qualit\u00e9 du dossier de candidature de Bilbao a \u00e9t\u00e9 renforc\u00e9e par une approche collaborative entre plusieurs acteurs locaux et r\u00e9gionaux.\r\n\r\nPour toutes les demandes concernant les billets des finales 2018 \u00e0 Bilbao, veuillez svp \u00e9crire \u00e0 l'adresse info@rugby2018.bilbao.eus","0":"2018 sera une ann\u00e9e historique pour les tournois de rugby des clubs europ\u00e9ens car les finales auront lieu pour la premi\u00e8re fois en Espagne. Le stade San Mam\u00e9s de Bilbao accueillera les matchs phares de l'European Rugby Challenge Cup le vendredi 11 mai (coup d'envoi \u00e0 21:00) et de l'European Rugby Champions Cup le samedi 12 mai (coup d'envoi 17:45).\r\n\r\nLa finale du Continental Shield aura \u00e9galement lieu dans la ville basque alors que le sport se d\u00e9veloppe dans des territoires nouveaux et \u00e9mergents \u00e0 travers l'Europe.\r\n\r\n\r\nL'enceinte r\u00e9cemment refaite est le stade de l'Athletic Club de football et elle accueillera des matchs de l'EURO 2020 de l'UEFA. La qualit\u00e9 du dossier de candidature de Bilbao a \u00e9t\u00e9 renforc\u00e9e par une approche collaborative entre plusieurs acteurs locaux et r\u00e9gionaux.\r\n\r\nPour toutes les demandes concernant les billets des finales 2018 \u00e0 Bilbao, veuillez svp \u00e9crire \u00e0 l'adresse info@rugby2018.bilbao.eus"}{"content":"Thanos, qui a fait ses d\u00e9buts dans le num\u00e9ro 55 d\u2019Iron Man en 1973, est un chef de guerre de la race des Titans, qui r\u00e8gne sur les confins les plus \u00e9loign\u00e9s de l\u2019univers. Il est \u00e0 la t\u00eate d\u2019arm\u00e9es gigantesques, les Chitauris et les Outriders. Le personnage avait fait une br\u00e8ve apparition dans Avengers, puis prononc\u00e9 quelques phrases dans Les Gardiens de la Galaxie et on avait \u00e9galement pu l'apercevoir \u00e0 la fin d\u2019Avengers : L\u2019Ere d'Ultron. \r\n\r\n\"Dans notre sc\u00e9nario, Thanos devait \u00eatre porteur d\u2019une menace bien plus grande que tout ce \u00e0 quoi les Avengers avaient pu \u00eatre confront\u00e9s. Nous ne pouvions pas nous contenter de montrer sa force gigantesque. Il fallait un m\u00e9chant qui soit \u00e0 la fois charismatique et \u00e9tonnamment \u00e9mouvant. Bien plus que tous les autres films, Avengers: Infinity War traite de Thanos, son ambition, ses objectifs et son histoire. C\u2019est la premi\u00e8re fois dans l\u2019univers Marvel qu\u2019un film adopte le point de vue du m\u00e9chant.\"","0":"Thanos, qui a fait ses d\u00e9buts dans le num\u00e9ro 55 d\u2019Iron Man en 1973, est un chef de guerre de la race des Titans, qui r\u00e8gne sur les confins les plus \u00e9loign\u00e9s de l\u2019univers. Il est \u00e0 la t\u00eate d\u2019arm\u00e9es gigantesques, les Chitauris et les Outriders. Le personnage avait fait une br\u00e8ve apparition dans Avengers, puis prononc\u00e9 quelques phrases dans Les Gardiens de la Galaxie et on avait \u00e9galement pu l'apercevoir \u00e0 la fin d\u2019Avengers : L\u2019Ere d'Ultron. \r\n\r\n\"Dans notre sc\u00e9nario, Thanos devait \u00eatre porteur d\u2019une menace bien plus grande que tout ce \u00e0 quoi les Avengers avaient pu \u00eatre confront\u00e9s. Nous ne pouvions pas nous contenter de montrer sa force gigantesque. Il fallait un m\u00e9chant qui soit \u00e0 la fois charismatique et \u00e9tonnamment \u00e9mouvant. Bien plus que tous les autres films, Avengers: Infinity War traite de Thanos, son ambition, ses objectifs et son histoire. C\u2019est la premi\u00e8re fois dans l\u2019univers Marvel qu\u2019un film adopte le point de vue du m\u00e9chant.\""}{"content":"SensioLabs : peux-tu nous pr\u00e9senter les principaux changements apport\u00e9s par la nouvelle version ?\r\nNicolas Grekas : Je dirai de Symfony 4 que c\u2019est une nouvelle fa\u00e7on de d\u00e9velopper, beaucoup plus simple, pour les d\u00e9veloppeurs qui devaient tr\u00e8s souvent faire certaines t\u00e2ches de mani\u00e8re r\u00e9p\u00e9titive. C\u2019est particuli\u00e8rement le cas pour la configuration : \u00e0 chaque fois qu\u2019on d\u00e9finit ce qu\u2019on appelle un service, il faut (en Symfony 3) modifier un fichier de configuration en miroir des changements faits dans le code. Cela induit de la lourdeur \u00e0 l\u2019\u00e9criture, mais \u00e9galement \u00e0 la maintenance (par exemple tout renommage dans le code n\u00e9cessite aussi d\u2019aller voir la configuration pour dire : \u00ab j\u2019ai renomm\u00e9 ces parties du code \u00bb). Dans Symfony 4, de nouvelles fonctionnalit\u00e9s permettent d\u2019automatiser compl\u00e8tement la configuration pour l\u2019usage commun.\r\n\r\nPour r\u00e9sumer : avant Symfony 4, il fallait \u00eatre explicite pour que la configuration soit bonne ; il fallait tout dire \u00e0 Symfony sous forme de configuration pour que Symfony puisse fonctionner. D\u00e9sormais, au lieu d\u2019\u00eatre explicite au d\u00e9tail pr\u00e8s, on est explicite par lots : on exprime des conventions, et tout ce qui entre dans le cadre de la convention sans y d\u00e9roger est configur\u00e9 automatiquement.\r\n\r\nSymfony 4, une version plus automatis\u00e9e\r\nSensioLabs : Peux-tu pr\u00e9ciser ce qu\u2019est une convention dans Symfony 4 ?\r\nNicolas Grekas : Prenons un exemple, en voici une commune : \u00ab pour toutes les classes de mon application qui vont avoir besoin d\u2019un logger, leur passer le logger par d\u00e9faut disponible de base dans Symfony \u00bb. On peut \u00e9videmment modifier et remplacer le logger en question au cas par cas, sans autre configuration. Cette r\u00e8gle suffit g\u00e9n\u00e9ralement pour la majorit\u00e9 des cas. Dans Symfony 3 il fallait configurer les classes une par une pour pr\u00e9ciser quel logger leur passer (souvent le m\u00eame).\r\n\r\nDe m\u00eame, par exemple, il fallait configurer N fois la langue par d\u00e9faut d\u2019une application pour les N services qui en avaient besoin. Il est maintenant possible de dire : \u00ab pour tous les services qui ont besoin de la langue par d\u00e9faut, voil\u00e0 la valeur \u00e0 donner \u00bb, en r\u00e9digeant la convention.\r\n\r\nQui dit \u00ab convention \u00bb dit \u00e9galement \u00ab exceptions \u00bb. Dans Symfony 4 il y aussi une mani\u00e8re d\u2019exprimer des cas particuliers pour que la configuration soit explicitement adapt\u00e9e lorsque n\u00e9cessaire.\r\n\r\nLe but des conventions est de couvrir le cas g\u00e9n\u00e9ral, tout en permettant de passer outre si besoin. Le r\u00e9sultat est une configuration concentr\u00e9e \u00e0 l\u2019essentiel.\r\n\r\nSensioLabs : \u00c0 quoi correspond Symfony Flex ?\r\nNicolas Grekas : Flex participe \u00e0 l\u2019exp\u00e9rience Symfony 4 dont on parlait plus t\u00f4t. Il y a deux niveaux d\u2019automatisation dans Symfony :\r\n\r\nTout d\u2019abord, la configuration du code par convention, apport\u00e9e par Symfony 4.\r\n\r\nEnsuite, l\u2019automatisation du branchement des d\u00e9pendances de son code. Les bundles Symfony sont des fonctionnalit\u00e9s mises \u00e0 disposition par la communaut\u00e9 (ou en interne), et sont r\u00e9utilisables sur plusieurs applications diff\u00e9rentes. Ces fonctionnalit\u00e9s ont \u00e9galement besoin de configuration, en particulier lors de l\u2019installation de chaque nouveau bundle. C\u2019est cette configuration-l\u00e0 qui est apport\u00e9e par Flex. Nous avons commenc\u00e9 un travail d\u2019inventaire de toutes les recettes de configuration d\u2019un maximum de bundles de la communaut\u00e9. Cette base de connaissance permet \u00e0 quelqu\u2019un qui veut utiliser (ou juste tester) un de ces bundles de pouvoir le faire sans effort : Flex s\u2019occupera de fournir la configuration par d\u00e9faut n\u00e9cessaire.\r\n\r\nSensioLabs : Peux-tu nous pr\u00e9ciser cette automatisation et le fait que le code soit dor\u00e9navant \u00ab bundle-less \u00bb ?\r\nNicolas Grekas : Bundle-less ne signifie pas que l\u2019application ne consomme plus de bundles. La nuance est que d\u00e9sormais les bundles ne sont plus que pour du code tiers. Avant, dans Symfony 2 et 3, les applications \u00e9taient elles-m\u00eames des bundles.\r\n\r\nMais coder un bundle dans son application imposait d\u2019\u00e9crire du code tr\u00e8s sp\u00e9cifique pour l\u2019int\u00e9gration avec Symfony lui-m\u00eame. Ce code n\u2019avait que peu de valeur ajout\u00e9 m\u00e9tier, mais il \u00e9tait indispensable, induisant un dette technique inutile. Dans Symfony 4, ce bundle interm\u00e9diaire n\u2019est plus n\u00e9cessaire, on conseille donc de le supprimer de l\u2019application. Cela fait du code de l\u2019application un pur code m\u00e9tier, moins sp\u00e9cifique \u00e0 Symfony dans l\u2019architecture m\u00eame de l\u2019application.\r\n\r\nUne nouvelle fa\u00e7on de fonctionner en mode projet\r\nSensioLabs : A quel moment d\u2019un projet ces nouveaut\u00e9s prennent-elles le plus d\u2019ampleur ? Quels sont les principaux avantages de Symfony 4 pour les projets ?\r\nNicolas Grekas : Les nouveaut\u00e9s apport\u00e9es par Symfony 4 s\u2019appliquent sur toute la vie du projet ! \u00c0 une \u00e9poque (alors que l\u2019aventure Symfony 4 \u00e9tait balbutiante), la configuration automatique \u00e9tait consid\u00e9r\u00e9e par certains comme une bonne approche sympathique pour les d\u00e9butants, mais dont les plus exp\u00e9riment\u00e9s allaient s\u2019\u00e9loigner au fur et \u00e0 mesure de leur mont\u00e9e en comp\u00e9tences. Parce qu\u2019ils n\u2019en voyaient pas l\u2019int\u00e9r\u00eat et qu\u2019ils consid\u00e9raient que c\u2019\u00e9tait juste un facilitateur, une b\u00e9quille, dont ils n\u2019avaient pas besoin. \u00c0 vrai dire, rien de permettait de dire qu\u2019ils avaient tort \u00e0 cette \u00e9poque.\r\n\r\nCependant on s\u2019est rendu compte, \u00e0 force de pratique, qu\u2019en fait les d\u00e9veloppeurs experts gagnaient \u00e9galement en productivit\u00e9, mais que cela n\u00e9cessitait un changement de paradigme, un changement de fa\u00e7on de penser sa configuration. En interne, lorsque nous avons op\u00e9r\u00e9 la migration vers Symfony 4 de Blackfire.io, les d\u00e9veloppeurs s\u00e9niors qui \u00e9taient sur le sujet n\u2019\u00e9taient pas convaincus par l\u2019int\u00e9r\u00eat de cette \u00ab b\u00e9quille pour d\u00e9butant \u00bb. \u00c0 la fin de l\u2019exercice, apr\u00e8s avoir compris comment appr\u00e9hender cette nouvelle pratique de d\u00e9veloppement, ils \u00e9taient totalement conquis !\r\n\r\nC\u2019est un r\u00e9el changement dans la productivit\u00e9 des d\u00e9veloppeurs. La maintenabilit\u00e9 du projet est \u00e9galement am\u00e9lior\u00e9 puisqu\u2019on a fait diminuer le volume de fichiers de configuration. Cela veut dire qu\u2019il est beaucoup plus facile d\u2019entrer dans le projet et qu\u2019il est plus facile \u00e0 faire \u00e9voluer. C\u2019est le b\u00e9n\u00e9fice du raisonnement par convention et l\u2019automatisation qui s\u2019en suit.\r\n\r\nCela fait donc gagner du temps au d\u00e9veloppeur. Une des headlines phare de Symfony 4 est \u00ab keep you at coding as long as possible \u00bb, c\u2019est-\u00e0-dire que les allers-retours entre le code et la configuration sont tr\u00e8s largement r\u00e9duits et cela entraine un gain de temps consid\u00e9rable pour le d\u00e9veloppeur.","0":"SensioLabs : peux-tu nous pr\u00e9senter les principaux changements apport\u00e9s par la nouvelle version ?\r\nNicolas Grekas : Je dirai de Symfony 4 que c\u2019est une nouvelle fa\u00e7on de d\u00e9velopper, beaucoup plus simple, pour les d\u00e9veloppeurs qui devaient tr\u00e8s souvent faire certaines t\u00e2ches de mani\u00e8re r\u00e9p\u00e9titive. C\u2019est particuli\u00e8rement le cas pour la configuration : \u00e0 chaque fois qu\u2019on d\u00e9finit ce qu\u2019on appelle un service, il faut (en Symfony 3) modifier un fichier de configuration en miroir des changements faits dans le code. Cela induit de la lourdeur \u00e0 l\u2019\u00e9criture, mais \u00e9galement \u00e0 la maintenance (par exemple tout renommage dans le code n\u00e9cessite aussi d\u2019aller voir la configuration pour dire : \u00ab j\u2019ai renomm\u00e9 ces parties du code \u00bb). Dans Symfony 4, de nouvelles fonctionnalit\u00e9s permettent d\u2019automatiser compl\u00e8tement la configuration pour l\u2019usage commun.\r\n\r\nPour r\u00e9sumer : avant Symfony 4, il fallait \u00eatre explicite pour que la configuration soit bonne ; il fallait tout dire \u00e0 Symfony sous forme de configuration pour que Symfony puisse fonctionner. D\u00e9sormais, au lieu d\u2019\u00eatre explicite au d\u00e9tail pr\u00e8s, on est explicite par lots : on exprime des conventions, et tout ce qui entre dans le cadre de la convention sans y d\u00e9roger est configur\u00e9 automatiquement.\r\n\r\nSymfony 4, une version plus automatis\u00e9e\r\nSensioLabs : Peux-tu pr\u00e9ciser ce qu\u2019est une convention dans Symfony 4 ?\r\nNicolas Grekas : Prenons un exemple, en voici une commune : \u00ab pour toutes les classes de mon application qui vont avoir besoin d\u2019un logger, leur passer le logger par d\u00e9faut disponible de base dans Symfony \u00bb. On peut \u00e9videmment modifier et remplacer le logger en question au cas par cas, sans autre configuration. Cette r\u00e8gle suffit g\u00e9n\u00e9ralement pour la majorit\u00e9 des cas. Dans Symfony 3 il fallait configurer les classes une par une pour pr\u00e9ciser quel logger leur passer (souvent le m\u00eame).\r\n\r\nDe m\u00eame, par exemple, il fallait configurer N fois la langue par d\u00e9faut d\u2019une application pour les N services qui en avaient besoin. Il est maintenant possible de dire : \u00ab pour tous les services qui ont besoin de la langue par d\u00e9faut, voil\u00e0 la valeur \u00e0 donner \u00bb, en r\u00e9digeant la convention.\r\n\r\nQui dit \u00ab convention \u00bb dit \u00e9galement \u00ab exceptions \u00bb. Dans Symfony 4 il y aussi une mani\u00e8re d\u2019exprimer des cas particuliers pour que la configuration soit explicitement adapt\u00e9e lorsque n\u00e9cessaire.\r\n\r\nLe but des conventions est de couvrir le cas g\u00e9n\u00e9ral, tout en permettant de passer outre si besoin. Le r\u00e9sultat est une configuration concentr\u00e9e \u00e0 l\u2019essentiel.\r\n\r\nSensioLabs : \u00c0 quoi correspond Symfony Flex ?\r\nNicolas Grekas : Flex participe \u00e0 l\u2019exp\u00e9rience Symfony 4 dont on parlait plus t\u00f4t. Il y a deux niveaux d\u2019automatisation dans Symfony :\r\n\r\nTout d\u2019abord, la configuration du code par convention, apport\u00e9e par Symfony 4.\r\n\r\nEnsuite, l\u2019automatisation du branchement des d\u00e9pendances de son code. Les bundles Symfony sont des fonctionnalit\u00e9s mises \u00e0 disposition par la communaut\u00e9 (ou en interne), et sont r\u00e9utilisables sur plusieurs applications diff\u00e9rentes. Ces fonctionnalit\u00e9s ont \u00e9galement besoin de configuration, en particulier lors de l\u2019installation de chaque nouveau bundle. C\u2019est cette configuration-l\u00e0 qui est apport\u00e9e par Flex. Nous avons commenc\u00e9 un travail d\u2019inventaire de toutes les recettes de configuration d\u2019un maximum de bundles de la communaut\u00e9. Cette base de connaissance permet \u00e0 quelqu\u2019un qui veut utiliser (ou juste tester) un de ces bundles de pouvoir le faire sans effort : Flex s\u2019occupera de fournir la configuration par d\u00e9faut n\u00e9cessaire.\r\n\r\nSensioLabs : Peux-tu nous pr\u00e9ciser cette automatisation et le fait que le code soit dor\u00e9navant \u00ab bundle-less \u00bb ?\r\nNicolas Grekas : Bundle-less ne signifie pas que l\u2019application ne consomme plus de bundles. La nuance est que d\u00e9sormais les bundles ne sont plus que pour du code tiers. Avant, dans Symfony 2 et 3, les applications \u00e9taient elles-m\u00eames des bundles.\r\n\r\nMais coder un bundle dans son application imposait d\u2019\u00e9crire du code tr\u00e8s sp\u00e9cifique pour l\u2019int\u00e9gration avec Symfony lui-m\u00eame. Ce code n\u2019avait que peu de valeur ajout\u00e9 m\u00e9tier, mais il \u00e9tait indispensable, induisant un dette technique inutile. Dans Symfony 4, ce bundle interm\u00e9diaire n\u2019est plus n\u00e9cessaire, on conseille donc de le supprimer de l\u2019application. Cela fait du code de l\u2019application un pur code m\u00e9tier, moins sp\u00e9cifique \u00e0 Symfony dans l\u2019architecture m\u00eame de l\u2019application.\r\n\r\nUne nouvelle fa\u00e7on de fonctionner en mode projet\r\nSensioLabs : A quel moment d\u2019un projet ces nouveaut\u00e9s prennent-elles le plus d\u2019ampleur ? Quels sont les principaux avantages de Symfony 4 pour les projets ?\r\nNicolas Grekas : Les nouveaut\u00e9s apport\u00e9es par Symfony 4 s\u2019appliquent sur toute la vie du projet ! \u00c0 une \u00e9poque (alors que l\u2019aventure Symfony 4 \u00e9tait balbutiante), la configuration automatique \u00e9tait consid\u00e9r\u00e9e par certains comme une bonne approche sympathique pour les d\u00e9butants, mais dont les plus exp\u00e9riment\u00e9s allaient s\u2019\u00e9loigner au fur et \u00e0 mesure de leur mont\u00e9e en comp\u00e9tences. Parce qu\u2019ils n\u2019en voyaient pas l\u2019int\u00e9r\u00eat et qu\u2019ils consid\u00e9raient que c\u2019\u00e9tait juste un facilitateur, une b\u00e9quille, dont ils n\u2019avaient pas besoin. \u00c0 vrai dire, rien de permettait de dire qu\u2019ils avaient tort \u00e0 cette \u00e9poque.\r\n\r\nCependant on s\u2019est rendu compte, \u00e0 force de pratique, qu\u2019en fait les d\u00e9veloppeurs experts gagnaient \u00e9galement en productivit\u00e9, mais que cela n\u00e9cessitait un changement de paradigme, un changement de fa\u00e7on de penser sa configuration. En interne, lorsque nous avons op\u00e9r\u00e9 la migration vers Symfony 4 de Blackfire.io, les d\u00e9veloppeurs s\u00e9niors qui \u00e9taient sur le sujet n\u2019\u00e9taient pas convaincus par l\u2019int\u00e9r\u00eat de cette \u00ab b\u00e9quille pour d\u00e9butant \u00bb. \u00c0 la fin de l\u2019exercice, apr\u00e8s avoir compris comment appr\u00e9hender cette nouvelle pratique de d\u00e9veloppement, ils \u00e9taient totalement conquis !\r\n\r\nC\u2019est un r\u00e9el changement dans la productivit\u00e9 des d\u00e9veloppeurs. La maintenabilit\u00e9 du projet est \u00e9galement am\u00e9lior\u00e9 puisqu\u2019on a fait diminuer le volume de fichiers de configuration. Cela veut dire qu\u2019il est beaucoup plus facile d\u2019entrer dans le projet et qu\u2019il est plus facile \u00e0 faire \u00e9voluer. C\u2019est le b\u00e9n\u00e9fice du raisonnement par convention et l\u2019automatisation qui s\u2019en suit.\r\n\r\nCela fait donc gagner du temps au d\u00e9veloppeur. Une des headlines phare de Symfony 4 est \u00ab keep you at coding as long as possible \u00bb, c\u2019est-\u00e0-dire que les allers-retours entre le code et la configuration sont tr\u00e8s largement r\u00e9duits et cela entraine un gain de temps consid\u00e9rable pour le d\u00e9veloppeur."}